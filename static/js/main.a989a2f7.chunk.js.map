{"version":3,"sources":["reducers/initialState.js","constants/actionTypes.js","reducers/index.js","reducers/employeeSearch.js","api/api.js","sagas/EmployeeSaga.js","sagas/watcher.js","sagas/index.js","store/configureStore.js","components/employeeData/addEmployee.js","actions/employeeActions.js","components/employeeData/searchEmployee.js","components/dash-board/dashBoard.js","routes.js","containers/App.js","serviceWorker.js","index.js"],"names":["initialState","employee","employees","SEARCHED_EMPLOYEE","ALL_EMPLOYEES","rootReducer","combineReducers","state","arguments","length","undefined","action","type","types","newState","Object","objectSpread","assign","handleAllEmployeeList","EmployeeData","searchQuery","Promise","resolve","reject","fetch","concat","baseUrl","then","res","json","Employees","searchEmployeeSaga","_ref","payload","regenerator_default","a","wrap","_context","prev","next","call","sent","all","put","t0","error","stop","_marked","this","watchSearchEmployee","takeLatest","watcher_marked","startEmployeeSearch","fork","sagas_marked","configureStore","sagaMiddleware","createSagaMiddleware","createStore","reducer","applyMiddleware","runSaga","run","rootSaga","AddEmployee","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","handleMessageInput","bind","assertThisInitialized","handleSubmitMessage","e","setState","defineProperty","target","name","value","console","log","data","firstName","lastName","emailAddress","homePhone","workPhone","dob","request","post","send","set","end","err","react_default","createElement","className","es_form","row","col","input","onChange","placeholder","es_button","onClick","Component","searchedEmployeeAction","SearchEmployee","dispatch","preventDefault","empdata","onSubmit","searchedEmployee","table","columns","title","dataIndex","dataSource","size","connect","Header","Layout","Content","Footer","Sider","SubMenu","Row","Col","Menu","DashBoard","onButtonClicked","isAdd","isAddEmp","isSearchEmp","_this2","_this$state","layout","style","minHeight","menu","defaultSelectedKeys","mode","src","alt","width","height","key","icon","Item","background","padding","margin","NavLink","to","pathname","employeeData_addEmployee","searchEmployee","textAlign","routes","BrowserRouter","Switch","Route","exact","path","render","dash_board_dashBoard","Redirect","App","Boolean","window","location","hostname","match","store","ReactDOM","es","src_containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a989a2f7.chunk.js","sourcesContent":["export default {\n    employee: {},\n    employees:[]\n\n}","export const EMPLOYEE_LOAD_SUCCESS= 'EMPLOYEE_LOAD_SUCCESS';\nexport const SEARCHED_EMPLOYEE= 'SEARCHED_EMPLOYEE';\nexport const SEARCH_MEDIA_ERROR = 'SEARCH_MEDIA_ERROR';\nexport const ALL_EMPLOYEES = 'ALL_EMPLOYEES';","import employee from './employeeSearch';\nimport {combineReducers} from 'redux';\nconst rootReducer = combineReducers({\n    employee\n})\n\nexport default rootReducer;\n\n// import initialState from './initialState';\n// import * as types from '../constants/actionTypes';\n\n// const reducer = (state, action) => {\n//     // console.log('im reducer')\n//     switch(action.type){\n//         // case types.EMPLOYEE_LOAD_SUCCESS:\n//         // return  Object.assign({}, state, action.videos)\n//         case types.SEARCHED_EMPLOYEE:\n//             let newState = {...state};\n//             if(action.employee !== undefined){\n//             newState = Object.assign({}, state, {employee : Object.assign({}, action.employee)})\n//             } \n//             return {...newState};\n//             // else`{ \n//                 // return 'bull shit'\n//             // }\n//         // return [...state, action];\n//         default:\n//         return state;\n//     }\n// }\n// export default reducer;","// import initialState from './initialState';\n// import * as types from '../constants/actionTypes';\n\n// export default function (state = initialState.employees, action){\n//     switch(action.type){\n//         // case types.EMPLOYEE_LOAD_SUCCESS:\n//         // return  Object.assign({}, state, action.videos)\n//         case types.SEARCHED_EMPLOYEE:\n//         return {...state, searchedEmployee: action.employee._id};\n//         default:\n//         return state;\n//     }\n// }\n\n\nimport initialState from './initialState';\nimport * as types from '../constants/actionTypes';\n\n\nconst handleAllEmployeeList = (state, action) =>{\n    let newState = {...state};\n    if(action.employees !=undefined){\n        newState = Object.assign({},state,{employees: action.employees})\n    }\n    return {...newState};\n\n}\n\n\nexport default (state=initialState, action) => {\n    // console.log('im reducer')\n    switch(action.type){\n        // case types.EMPLOYEE_LOAD_SUCCESS:\n        // return  Object.assign({}, state, action.videos)\n        case types.SEARCHED_EMPLOYEE:\n            let newState = {...state};\n            if(action.employee !== undefined){\n            newState = Object.assign({}, state,{employee : action.employee})\n            // newState = Object.assign({}, state, action.employee)\n            }\n            return {...newState};\n        case types.ALL_EMPLOYEES:\n            return handleAllEmployeeList(state, action);\n            \n        default:\n        return state;\n    }\n}","// import { resolve } from \"url\";\n// const baseUrl = 'http://localhost:3010';\nconst baseUrl = 'https://swag-api.herokuapp.com';\n\nexport const EmployeeData = (searchQuery) =>{\n        //1\n        var promise = new Promise((resolve,reject) => {\n//        2\n            fetch(`${this.baseUrl}/product?firstName=${searchQuery}`)\n            .then(res => {\n                //then is chained to whatever fetch is returning\n                    // 4\n                    // console.log(res.json())\n\n                resolve (res.json());\n             //json takes the response and converts to json \n            })\n        // });\n//        3\n    })\n    // console.log(promise)\n    return promise;\n}\n\n\n\nexport const Employees = () =>{\n    //1\n    var promise = new Promise((resolve,reject) => {\n//        2\n        fetch(`${this.baseUrl}/products`)\n        .then(res => {\n            //then is chained to whatever fetch is returning\n                // 4\n                // console.log(res.json())\n\n            resolve (res.json());\n         //json takes the response and converts to json \n        })\n    // });\n//        3\n})\n// console.log(promise)\nreturn promise;\n}\n\n\n// export default EmployeeData;//ES6 format of module.export\n","import {all, put, call} from 'redux-saga/effects';\nimport {EmployeeData, Employees} from '../api/api';\nimport * as types from '../constants/actionTypes';\n\nexport function* searchEmployeeSaga({payload}){\n    try{\n        // console.log(payload+'here I am ');\n        const employee = yield call(EmployeeData,payload);\n        const employees = yield call(Employees)\n        // console.log(employees);\n        yield all([\n            // put({type: types.EMPLOYEE_LOAD_SUCCESS, employees}),\n            put({type: types.ALL_EMPLOYEES, employees: employees}),\n            put({type: types.SEARCHED_EMPLOYEE,employee: employee[0]})\n        ]);\n    }catch(error){\n        yield put ({type: 'SEARCH_EMPLOYEE_ERROR', error});\n    }\n}","import {takeLatest} from 'redux-saga/effects';\nimport {searchEmployeeSaga} from './EmployeeSaga';\nimport * as types from '../constants/actionTypes';\n\n\n\nexport default function* watchSearchEmployee(){\n    yield takeLatest(types.SEARCHED_EMPLOYEE, searchEmployeeSaga);\n\n\n}\n\n","import {fork} from 'redux-saga/effects';\nimport watchSearchEmployee from './watcher';\n\nexport default function* startEmployeeSearch(){\n    yield fork(watchSearchEmployee);\n}\n\n","import {createStore, applyMiddleware} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst configureStore = () =>{\n    const sagaMiddleware = createSagaMiddleware();\n    return {\n        ...createStore(reducer, applyMiddleware(sagaMiddleware)),\n        runSaga: sagaMiddleware.run(rootSaga)\n    };\n};\n\nexport default configureStore;\n// redux saga is a library that aims to make side effects in react-redux applications easier and better","\nimport React, { Component } from 'react';\n// import { request } from 'http';\nimport request from 'superagent';\nimport {Form, Input,Row,Col, Button} from 'antd';\nimport './addEmployee.css';\n// import { Layout, Menu, Icon } from 'antd';\n// import './index.css'; \n// const { Header, Sider, Content, Footer } = Layout;\n\n\nclass AddEmployee extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n        }\n        this.handleMessageInput = this.handleMessageInput.bind(this);\n        this.handleSubmitMessage= this.handleSubmitMessage.bind(this);\n    }\n\n    handleMessageInput(e){\n \n        this.setState({\n            [e.target.name]: e.target.value\n        });\n        // console.log(\"xyz\"+this.state.firstName)\n    }\n    handleSubmitMessage(e){\n        // e.preventDefault();\n        console.log('starting to submit profile');\n            const data = {\n                firstName: this.state.firstName,\n                lastName: this.state.lastName,\n                emailAddress: this.state.emailAddress,\n                homePhone: this.state.homePhone,\n                workPhone: this.state.workPhone,\n                dob: this.state.dob\n              };\n        // console.log(data);\n        request.post('http://localhost:3010/product')\n        .send(data)\n        .set('Accept', 'application/json')\n        .end((err,res)=> {\n            if(err){\n                console.log('no error');\n            } else{\n            console.log('success');\n              }\n         });\n\n    }\n\n  render() {\n    return (\n        <div>\n        <div className= \"input-form\">\n          <Form>\n          <Row>\n               <Col>\n                    <Input\n                        name= \"firstName\"\n                        type= \"text\"\n                        value={this.state.firstName}                \n                        onChange={this.handleMessageInput}\n                        placeholder= \"first name\"\n                    />\n                    <Input\n                        name= \"lastName\"\n                        type= \"value\"\n                        value={this.state.lastName}                \n                        onChange={this.handleMessageInput}\n                        placeholder= \"last name\"\n                    />\n               </Col>\n               <Col>\n               <Input\n            name= \"homePhone\"\n            type= \"value\"\n            value={this.state.homePhone}                \n            onChange={this.handleMessageInput}\n            placeholder= \"home-phone\"\n            />\n\n            <Input\n            name= \"workPhone\"\n            type= \"value\"\n            value={this.state.workPhone}                \n            onChange={this.handleMessageInput}\n            placeholder= \"work-phone\"\n            />\n               </Col>\n\n          </Row>\n\n            <Input\n            name= \"dob\"\n            type= \"value\"\n            value={this.state.dob}                \n            onChange={this.handleMessageInput}\n            placeholder= \"date of birth\"\n            />\n            <Button type='Submit'onClick={this.handleSubmitMessage}>Submit</Button>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nexport default AddEmployee;\n","import * as types from '../constants/actionTypes';\n\nexport const searchedEmployeeAction = (payload) => ({\n    type: types.SEARCHED_EMPLOYEE,\n    payload\n})","import React, { Component } from 'react';\nimport EmployeeData from '../../api/api';\nimport {searchedEmployeeAction} from '../../actions/employeeActions';\nimport {connect} from 'react-redux';\nimport {Form, Input, Button} from 'antd';\nimport './addEmployee.css';\nimport { cloneableGenerator } from 'redux-saga/utils';\nimport { Table } from 'antd';\n// import employeeSearch from '../../reducers/employeeSearch';\nclass SearchEmployee extends Component {\n\n    constructor(props){\n        super(props);\n          this.state = {\n            value:''\n          }\n          // this.handleUserData = this.handleUserdata.bind(this)\n          this.handleSubmitMessage = this.handleSubmitMessage.bind(this)\n          this.handleMessageInput = this.handleMessageInput.bind(this)\n        }\n    componentDidMount(){\n      this.props.dispatch(searchedEmployeeAction())\n        }\n    \n    handleSubmitMessage(e){\n      e.preventDefault();\n      const data = this.state.value;\n      console.log(data);\n      this.props.dispatch(searchedEmployeeAction(data))\n\n      }\n    \n    handleMessageInput(e){\n      this.setState({\n        value: e.target.value\n    });\n    }\n\n\n  render() {\n    const empdata = \n    this.props.employees;\n\n    const columns = [{\n      title: 'first name',\n      dataIndex: 'firstName',\n      // key: '10',\n    }, {\n      title: 'lastName',\n      dataIndex: 'lastName',\n      // key: '2',\n    }, {\n      title: 'homePhone',\n      dataIndex: 'homePhone',\n      // key: 'homePhone',\n    }]; \n    // console.log(this.props);\n    return (  \n      <div>\n            <div className=\"input-form\"> \n            <Form onSubmit={this.handleSubmitMessage}>\n              <Input \n              type=\"text\" \n              placeholder=\"search employee here\"\n              value={this.state.value}\n              onChange = {this.handleMessageInput}\n              />\n              <Button onClick={this.handleSubmitMessage}>search</Button>\n\n            </Form>            \n            </div>\n            <div>\n                  <p> {this.props.searchedEmployee} </p>\n            <div>\n                <Table columns={columns} dataSource={empdata} size=\"middle\" />\n                {/* <h4>Small size table</h4>\n                 <Table columns={columns} dataSource={data} size=\"small\" /> */}\n            </div>\n     \n            </div>\n      </div>\n\n    );\n  }\n}\nSearchEmployee.propTypes = {\n  // Define your PropTypes here\n  };\nconst mapStateToProps = (state) => {\n  // console.log('hello ' + JSON.stringify(state))\n  // const jsondata = Object.keys(state.employee.employees).map(function(key) {\n  //   return [state.employee.employees[key]];\n  // })\n  return {\n    searchedEmployee: state.employee.employee.firstName,\n    employees: state.employee.employees\n  }\n}\n\n\n\nexport default connect(mapStateToProps)(SearchEmployee);\n","import React, { Component } from 'react';\nimport './dashBoard.css';\n// import ContentData from '../content/index.js';\nimport AddEmployee from '../employeeData/addEmployee';\nimport SearchEmployee from '../employeeData/searchEmployee';\nimport { Layout, Menu, Breadcrumb, Icon } from 'antd';\nimport { NavLink } from \"react-router-dom\";\n\n\nconst { Header, Content, Footer, Sider, Row, Col } = Layout;\nconst SubMenu = Menu.SubMenu;\n\nclass DashBoard extends Component {\n\n    constructor(props){\n        super(props);    \n        this.state={\n        isAddEmp:false,\n        isSearchEmp:false\n      };    \n    }\n\n    onButtonClicked = (isAdd) => {\n      if(isAdd === \"add\"){\n        this.setState({ isAddEmp : true, isSearchEmp : false });\n      } else{\n        this.setState({ isSearchEmp : true, isAddEmp : false });\n      }\n    }\n  // state = {\n  //   collapsed: false,\n  // };\n\n  // toggle = () => {\n  //   this.setState({\n  //     collapsed: !this.state.collapsed,\n  //   });\n  // }\n\n  render() {\n\n    const { isAddEmp, isSearchEmp } = this.state;\n\n\n        return (\n      // <div>\n          <Layout style={{ minHeight: '100vh' }}>\n        <Sider\n          // collapsible\n          // collapsed={this.state.collapsed}\n          // onCollapse={this.onCollapse}\n        >\n          <div className=\"logo\" />\n          <Menu defaultSelectedKeys={['1']} mode=\"inline\">\n                    <img src=\"https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png\" alt =\"image\" width=\"200px\" height=\"70px\"></img>\n\n           <SubMenu\n              key=\"sub1\"\n              title={<span><Icon type=\"user\" /><span>Perosnal Details</span></span>}\n            >\n              <Menu.Item key=\"1\" onClick={()=> this.onButtonClicked(\"add\")} >Add Applicant</Menu.Item>\n              <Menu.Item key=\"2\" onClick={()=> this.onButtonClicked(\"\")}>Search Applicant</Menu.Item>\n            </SubMenu>\n            <Menu.Item key=\"3\">\n              <Icon type=\"desktop\" />\n              <span>Documents</span>\n            </Menu.Item>\n            <SubMenu\n              key=\"sub2\"\n              title={<span><Icon type=\"user\" /><span>Education Details</span></span>}\n            >\n              <Menu.Item key=\"4\">Tom</Menu.Item>\n              <Menu.Item key=\"5\">Bill</Menu.Item>\n              <Menu.Item key=\"6\">Alex</Menu.Item>\n            </SubMenu>\n            <SubMenu\n              key=\"sub3\"\n              title={<span><Icon type=\"team\" /><span>Certifications</span></span>}\n            >\n              <Menu.Item key=\"7\">Team 1</Menu.Item>\n              <Menu.Item key=\"8\">Team 2</Menu.Item>\n            </SubMenu>\n            <Menu.Item key=\"9\">\n              <Icon type=\"file\" />\n              <span>Language</span>\n            </Menu.Item>\n            <Menu.Item key=\"10\">\n              <Icon type=\"file\" />\n              <span>Work Experience</span>\n            </Menu.Item>  \n          </Menu>\n        </Sider>\n        <Layout>\n          <Header style={{ background: '#fff', padding: 0 }} />\n          <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 580 }}>\n          <NavLink to={{ pathname: \"/AddEmployee\" }}>Add Employee</NavLink>\n          {\"|\"}\n          <NavLink to={{ pathname: \"/SearchEmployee\" }}>Search Employee</NavLink>\n                {(isAddEmp ? (<AddEmployee {...this.props} />) : (\"\"))}\n                {(isSearchEmp ? (<SearchEmployee  {...this.props} />) : (\"\"))}\n\n                    </Content>\n          <Footer style={{ textAlign: 'center' }}>\n            {/* Ant Design ©2018 Created by Ant UED */}\n          </Footer>\n        </Layout>\n      </Layout>\n\n      // {/* </div> */}\n        \n    );\n  }\n}\n\n\n\nexport default DashBoard;\n  ","import React from \"react\";\nimport { Route, Switch, Redirect, BrowserRouter } from \"react-router-dom\";\n// import Login from \"../components/Login\";\n// import Home from \"../components/Home\";\n// import CreateNewRequest from \"../components/CreateNewRequest\";\n// import React from \"react\";\n// import { Route, IndexRoute} from 'react-router';\n\n// import {  Switch, Redirect, BrowserRouter } from \"react-router-dom\";\n//import Login from \"../components/login/login\";\nimport DashBoard from \"./components/dash-board/dashBoard\";\n// import contentData from '../components/content/index';\nimport AddEmployee from './components/employeeData/addEmployee';\nimport SearchEmployee from './components/employeeData/searchEmployee';\n// import HomePage from './components/HomePage';\n// import CreateNewRequest from \"../components/CreateNewRequest\";\nimport configureStore from './store/configureStore';\nimport { Provider } from 'react-redux';  \n\n\n// Map components to different routes.\n// The parent component wraps other components and thus serves as  the entrance to \n// other React components.\n// IndexRoute maps HomePage component to the default route\nconst store = configureStore();\n\nexport default () => {\n    return (\n        // <Provider store={store}>\n        <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/DashBoard\" render={props => <DashBoard {...props} />} />\n          {/* <Route exact path=\"/home\" render={props => <Home {...props} />} /> */}\n          <Route exact path=\"/AddEmployee\" render={props => <AddEmployee {...props} />} />\n          <Route exact path=\"/SearchEmployee\" render={props => <SearchEmployee {...props} />} />\n\n          <Redirect to=\"/DashBoard\" />\n        </Switch>\n      </BrowserRouter>\n    //   </Provider>\n    )};\n\n// export default (\n    // <Route path =\"/\" component ={App}>\n    //     {/* <IndexRoute component ={DashBoard} /> */}\n    //     <Route path = 'AddEmployee' component = {AddEmployee} />\n    //     <Route path = 'SearchEmployee' component = {SearchEmployee} />\n    // </Route>\n\n//     <Route path =\"/\" component ={App}>\n//         <Route path = 'SearchEmployee' component = {SearchEmployee} />\n//         <Route path = 'AddEmployee' component = {AddEmployee} />\n//     </Route>\n// );\n\n// export default () => {\n//   return (\n\n    \n//     <BrowserRouter>\n//       <Switch>\n//         {/* <Route exact path=\"/login\" render={props => <Login {...props} />} /> */}\n//         <IndexRoute path=\"/dashBoard\" component = {DashBoard} />\n//         {/* <Route exact path=\"/createNewRequest\" render={props => <CreateNewRequest {...props} />} /> */}\n//         <Route path = 'AddEmployee' component = {AddEmployee} />\n//         <Route path = 'SearchEmployee' component = {SearchEmployee} />\n//         <Redirect to=\"/dashBoard\" />\n//       </Switch>\n//     </BrowserRouter>\n//   );\n// };","import React, { Component } from 'react';\nimport {IndexLink, Link} from 'react-router';\nimport PropTypes from 'prop-types';\nimport AddEmployee from '../components/employeeData/addEmployee';\nimport DashBoard from '../components/dash-board/dashBoard';\nimport Routes from '../routes';\nimport configureStore from '../store/configureStore';\n// import logo from './logo.svg';\nimport './App.css';\n// import Header from '../components/Header';\nimport { Provider } from 'react-redux';  \n\n// import logo from './logo.svg';\n// import './App.css';\nconst store = configureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n            {/* <Provider store={store}> */}\n\n                <Routes />\n\n\n          {/* </Provider> */}\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport configureStore from './store/configureStore';\nimport App from './containers/App';\n// import routes from './routes';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\nReactDOM.render(\n    <BrowserRouter>\n    <Provider store={store}>\n        < App />\n    </Provider>\n    </BrowserRouter>\n    , \n    document.getElementById('root'));\n    \n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}